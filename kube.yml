# -------------------------------
# RBAC Configuration for StatefulSets Access
# -------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: statefulset-reader
  namespace: default
rules:
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: statefulset-reader-binding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: Role
  name: statefulset-reader
  apiGroup: rbac.authorization.k8s.io

---
# -------------------------------
# ConfigMap for Configuration
# -------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: kv-config
data:
  NODES: "[1, 2, 3, 4, 5]"
  RUST_BACKTRACE: "1"

---
# -------------------------------
# Headless Service for Networking (Net)
# -------------------------------
apiVersion: v1
kind: Service
metadata:
  name: net
  labels:
    app: net
spec:
  clusterIP: None
  selector:
    app: net
  ports:
    - name: "8001"
      port: 8001
      targetPort: 8001
    - name: "8002"
      port: 8002
      targetPort: 8002
    - name: "8003"
      port: 8003
      targetPort: 8003
    - name: "8004"
      port: 8004
      targetPort: 8004
    - name: "8013"
      port: 8013
      targetPort: 8013
    - name: "8012"
      port: 8012
      targetPort: 8012
    - name: "8014"
      port: 8014
      targetPort: 8014
    - name: "8015"
      port: 8015
      targetPort: 8015
    - name: "8023"
      port: 8023
      targetPort: 8023
    - name: "8021"
      port: 8021
      targetPort: 8021
    - name: "8024"
      port: 8024
      targetPort: 8024
    - name: "8025"
      port: 8025
      targetPort: 8025
    - name: "8032"
      port: 8032
      targetPort: 8032
    - name: "8031"
      port: 8031
      targetPort: 8031
    - name: "8034"
      port: 8034
      targetPort: 8034
    - name: "8035"
      port: 8035
      targetPort: 8035
    - name: "8043"
      port: 8043
      targetPort: 8043
    - name: "8041"
      port: 8041
      targetPort: 8041
    - name: "8042"
      port: 8042
      targetPort: 8042
    - name: "8045"
      port: 8045
      targetPort: 8045
    - name: "8051"
      port: 8051
      targetPort: 8051  
    - name: "8052"
      port: 8052
      targetPort: 8052
    - name: "8053"
      port: 8053
      targetPort: 8053
    - name: "8054"
      port: 8054
      targetPort: 8054

---
# -------------------------------
# Single Pod for Networking (Net)
# -------------------------------
apiVersion: v1
kind: Pod
metadata:
  name: net
  labels:
    app: net
spec:
  containers:
    - name: net
      image: dnagard/net_actor:latest
      imagePullPolicy: Always
      stdin: true
      tty: true
      ports:
        - containerPort: 8001
        - containerPort: 8002
        - containerPort: 8003
        - containerPort: 8004
        - containerPort: 8015
        - containerPort: 8014
        - containerPort: 8013
        - containerPort: 8012
        - containerPort: 8025
        - containerPort: 8024
        - containerPort: 8023
        - containerPort: 8021
        - containerPort: 8035
        - containerPort: 8034
        - containerPort: 8032
        - containerPort: 8031
        - containerPort: 8045
        - containerPort: 8043
        - containerPort: 8042
        - containerPort: 8041
        - containerPort: 8054
        - containerPort: 8053
        - containerPort: 8052
        - containerPort: 8051
      env:
        - name: PORT_MAPPINGS
          value: "[[8012,8021],[8013,8031],[8014, 8041],[8015, 8051],[8023,8032],[8024, 8042],[8025, 8052],[8034, 8043],[8035, 8053],[8045, 8054]]"
        - name: CLIENT_PORTS
          value: "[8001, 8002, 8003, 8004, 8005]"
        - name: NODES
          valueFrom:
            configMapKeyRef:
              name: kv-config
              key: NODES
        - name: RUST_BACKTRACE
          valueFrom:
            configMapKeyRef:
              name: kv-config
              key: RUST_BACKTRACE

---
# -------------------------------
# StatefulSet for Distributed Database (With Persistent Storage)
# -------------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kv-store
spec:
  serviceName: "kv-store"
  replicas: 3
  selector:
    matchLabels:
      app: kv-store
  template:
    metadata:
      labels:
        app: kv-store
    spec:
      containers:
        - name: kv-store
          image: dnagard/kv_store:pStoreRec
          imagePullPolicy: Always
          env:
            - name: NODES
              valueFrom:
                configMapKeyRef:
                  name: kv-config
                  key: NODES
            - name: RUST_BACKTRACE
              valueFrom:
                configMapKeyRef:
                  name: kv-config
                  key: RUST_BACKTRACE
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command: ["/bin/sh", "-c"]
          args:
            [
              "export PID=$(echo $POD_NAME | sed 's/[^0-9]*\\([0-9]*\\)$/\\1/') && PID=$((PID + 1)) && exec kv_demo",
            ]
          volumeMounts:
            - name: data
              mountPath: /data

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard  # Explicitly defined for clarity
